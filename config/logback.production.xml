<configuration scan="false">

	<property name="LOG_FILE_ROOT"
		value="${transitclock.logging.dir:-/Logs}/${transitclock.core.agencyId:-DEFAULT}/core/%d{yyyy/MM/dd}" />

	<property name="DEFAULT_PATTERN"
		value="%level - %msg%n%xThrowable" />

	<appender name="EMERGENCY_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover. Compress the file when rolling it over. -->
			<fileNamePattern>${LOG_FILE_ROOT}/cloudwatchEmergencyFile.log.gz</fileNamePattern>
		</rollingPolicy>
		<encoder>
			<!-- Info on possible patterns is at http://logback.qos.ch/manual/layouts.html#ClassicPatternLayout -->
			<charset>UTF-8</charset>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- The main appender for the Core module. -->
	<appender name="CORE" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Core</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<!-- Only want this appender to take effect if not DEBUG level. This way 
			when DEBUG level the CORE_DEBUG can instead handle things and use more verbose 
			logging that could be useful for debugging. -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<onMatch>DENY</onMatch>
			<onMismatch>ACCEPT</onMismatch>
		</filter>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>


	<!-- Separate stream for config parameters logging -->
	<appender name="CONFIG" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Config</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for AVL logging -->
	<appender name="AVL" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Avl</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<appender name="MATCHER" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Matcher</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for ArrivalDeparture logging -->
	<appender name="FREQUENCY" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Frequency</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for ArrivalDeparture logging -->
	<appender name="ARRIVAL_DEPARTURE" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>ArrivalDeparture</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for VehicleEvents logging -->
	<appender name="VEHICLE_EVENT" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>VehicleEvent</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for Cache logging -->
	<appender name="CACHE" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Cache</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for Holding Time Generator logging -->
	<appender name="HOLDING" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Holding</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for Prediction logging -->
	<appender name="PREDICTION" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Prediction</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for schedule based predictions logging -->
	<appender name="SCHED_BASED_PREDS" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>SchedBasedPreds</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for PRED_ACCURACY logging -->
	<appender name="PRED_ACCURACY" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>PredAccuracy</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>
	
	<!-- Separate stream for PRED_ACCURACY logging -->
	<appender name="EXTERNAL_PRED_ACCURACY" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>ExternalPredAccuracy</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for Match logging -->
	<appender name="MATCH" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Match</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for Monitoring logging -->
	<appender name="MONITORING" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Monitoring</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for Auto Block Assigner logging -->
	<appender name="AUTO_ASSIGNER" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>AutoAssigner</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for SQL logging -->
	<appender name="SQL" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Sql</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- Separate stream for GTFS Realtime input feed logging -->
	<appender name="GTFS_REALTIME" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>GtfsRealtime</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>

	<!-- In case easiest to write logs to console. -->
	<appender name="STDOUT" class="com.j256.cloudwatchlogbackappender.CloudWatchAppender">
		<region>${logback.cloudWatch.region}</region>
		<logGroup>${logback.cloudWatch.logGroup}</logGroup>
		<logStream>Console</logStream>
		<layout>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</layout>

		<appender-ref ref="EMERGENCY_FILE" />
	</appender>



	<!--====================================================== -->
	<!--=============== Loggers defined here ================= -->
	<!--====================================================== -->

	<!-- Specify various loggers. This where the logging level is specified 
		for each class. Note: cannot just have two loggers defined for a name in 
		order to define different logging types depending on the level. Only the 
		last definition is used when duplicating the logging for a name. But can 
		use filters as shown in http://stackoverflow.com/questions/5653062/how-can-i-configure-logback-to-log-different-levels-for-a-logger-to-different-de -->

	<!-- For all the data logging files. Note: additivity must be set to false 
		so that data only logged to the data files instead of also to the core logging 
		file. -->
	<logger name="org.transitclock.db.structs.ArrivalDeparture" level="info"
		additivity="false">
		<appender-ref ref="ARRIVAL_DEPARTURE" />
	</logger>

	<logger name="org.transitclock.db.structs.VehicleEvent" level="info"
		additivity="false">
		<appender-ref ref="VEHICLE_EVENT" />
	</logger>

	<logger
		name="org.transitclock.core.VehicleState"
		level="info" additivity="false">
		<appender-ref ref="FREQUENCY" />
	</logger>	
		
	<logger name="org.transitclock.core.PredictionGeneratorDefaultImpl"
		level="info" additivity="false">
		<appender-ref ref="PREDICTION" />
	</logger>

	<logger
		name="org.transitclock.core.predictiongenerator.kalman.KalmanPredictionGeneratorImpl"
		level="info" additivity="false">
		<appender-ref ref="PREDICTION" />
	</logger>
	
	<logger
		name="org.transitclock.core.predictiongenerator.lastvehicle.LastVehiclePredictionGeneratorImpl"
		level="info" additivity="false">
		<appender-ref ref="PREDICTION" />
	</logger>
	
	<logger
		name="org.transitclock.core.predictiongenerator.average.frequency.HistoricalAveragePredictionGeneratorImpl"
		level="info" additivity="false">
		<appender-ref ref="PREDICTION" />
	</logger>
	
	<logger
		name="org.transitclock.core.predictiongenerator.average.scheduled.HistoricalAveragePredictionGeneratorImpl"
		level="info" additivity="false">
		<appender-ref ref="PREDICTION" />
	</logger>

	<logger name="org.transitclock.core.schedBasedPreds" level="info"
		additivity="false">
		<appender-ref ref="SCHED_BASED_PREDS" />
	</logger>

	<logger name="org.transitclock.db.structs.Match" level="info"
		additivity="false">
		<appender-ref ref="MATCH" />
	</logger>

	<logger name="org.transitclock.avl" level="info" additivity="false">
		<appender-ref ref="AVL" />
	</logger>

	<logger name="org.transitclock.core.AvlProcessor" level="info" additivity="false">
		<appender-ref ref="AVL" />
	</logger>

	<logger name="org.transitclock.core.dataCache.TripDataHistoryCache"
		level="info" additivity="false">
		<appender-ref ref="CACHE" />
	</logger>
	<logger name="org.transitclock.core.dataCache.KalmanErrorCache"
		level="info" additivity="false">
		<appender-ref ref="CACHE" />
	</logger>
	<logger name="org.transitclock.core.dataCache.frequency.FrequencyBasedHistoricalAverageCache"
		level="info" additivity="false">
		<appender-ref ref="CACHE" />
	</logger>
	<logger name="org.transitclock.core.dataCache.scheduled.ScheduledBasedHistoricalAverageCache"
		level="info" additivity="false">
		<appender-ref ref="CACHE" />
	</logger>
	<logger name="org.transitclock.core.dataCache.StopArrivalDepartureCache"
		level="info" additivity="false">
		<appender-ref ref="CACHE" />
	</logger>
	<logger name="org.transitclock.core.holdingmethod.HoldingTimeGeneratorDefaultImpl"
		level="info" additivity="false">
		<appender-ref ref="HOLDING" />
	</logger>
 	<logger name="org.transitclock.core.TemporalMatcher" level="info" additivity="true"> 
		<appender-ref ref="MATCHER" /> </logger> 
	<logger name="org.transitclock.core.SpatialMatcher" level="info" additivity="true"> 
		<appender-ref ref="MATCHER" /> </logger>
	<logger name="org.transitclock.config" level="info" additivity="false">
		<appender-ref ref="CONFIG" />
	</logger>

	<logger name="org.transitclock.core.predAccuracy" level="info"
		additivity="false">
		<appender-ref ref="PRED_ACCURACY" />
	</logger>
	
	<logger name="org.transitclock.core.predAccuracy.gtfsrt.GTFSRealtimePredictionAccuracyModule" level="info"
		additivity="false">
		<appender-ref ref="EXTERNAL_PRED_ACCURACY" />
	</logger>		

	<logger name="org.transitclock.monitoring" level="info"
		additivity="false">
		<appender-ref ref="MONITORING" />
	</logger>

	<logger name="org.transitclock.core.autoAssigner" level="info"
		additivity="false">
		<appender-ref ref="AUTO_ASSIGNER" />
	</logger>

	<logger name="org.transitclock.core.dataCache.TripDataHistoryCache"
		level="info" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>
	
	<logger name="org.transitclock.core.TravelTimeDetails"
		level="warn" additivity="false">
		<appender-ref ref="PREDICTION" />
	</logger>
	<logger name="org.transitclock.core.DwellTimeDetails"
		level="warn" additivity="false">
		<appender-ref ref="PREDICTION" />
	</logger>	
	<logger name="org.transitclock.core.TravelTimes"
		level="warn" additivity="false">
		<appender-ref ref="PREDICTION" />
	</logger>

	<logger name="org.transitclock.core.dataCache.TripDataHistoryCache"
		level="info" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>
	
	<logger name="net.sf.ehcache" level="info" additivity="false">
		<appender-ref ref="CACHE" />
	</logger>
	
	<logger name="org.transitclock.core.ArrivalDepartureGeneratorDefaultImpl" 
		level="info" additivity="true"> 
		<appender-ref ref="ARRIVAL_DEPARTURE" /> 
	</logger>

	<logger name="org.transitclock.feed.gtfsRt"
		level="warn" additivity="false">
		<appender-ref ref="GTFS_REALTIME" />
	</logger>	

	<logger name="org.transitclock.api.gtfsRealtime.GtfsRtVehicleFeed" level="info" additivity="true">
		<appender-ref ref="GTFS_REALTIME" />
	</logger>

	<logger name="org.transitclock.api.gtfsRealtime.GtfsRtTripFeed" level="info" additivity="true">
		<appender-ref ref="GTFS_REALTIME" />
	</logger>

	<root level="info">
		<appender-ref ref="CORE" />
	</root>

</configuration>
